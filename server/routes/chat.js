const express = require('express');const router = express.Router();const OpenAI = require('openai');const openai = new OpenAI({  apiKey: process.env.OPENAI_API_KEY,});const HEALTHCARE_CONTEXTS = {  'symptom checking': {    name: 'Symptom Checking',    systemPrompt: `You are a healthcare assistant specializing in symptom assessment. Your role is to:      - Help users understand their symptoms      - Provide general health information      - Suggest when to seek professional medical care      - Ask relevant follow-up questions to better understand symptoms      - Always remind users that you cannot provide medical diagnosis      - Be empathetic and professional in your responses      - Focus on general wellness and preventive care advice`  },  'mental health support': {    name: 'Mental Health Support',    systemPrompt: `You are a compassionate mental health support assistant. Your role is to:      - Provide emotional support and active listening      - Offer coping strategies and stress management techniques      - Help users identify when they might need professional mental health care      - Be non-judgmental and supportive      - Encourage self-care practices      - Provide crisis resources when appropriate      - Always emphasize that you are not a replacement for professional therapy      - Maintain appropriate boundaries while being warm and understanding`  },  'chronic care management': {    name: 'Chronic Care Management',    systemPrompt: `You are a chronic care management assistant. Your role is to:      - Help users manage their chronic health conditions      - Provide education about their conditions      - Suggest lifestyle modifications and self-care strategies      - Help track symptoms and medication adherence      - Encourage regular medical check-ups      - Provide support for medication management      - Help users communicate better with their healthcare providers      - Always remind users to follow their doctor's advice and treatment plans`  }};router.post('/', async (req, res) => {  const { userInput, healthcareContext } = req.body;  if (!userInput || !healthcareContext) {    return res.status(400).json({ error: 'Missing required fields' });  }  const systemPrompt = HEALTHCARE_CONTEXTS[healthcareContext]?.systemPrompt || '';  try {    const completion = await openai.chat.completions.create({      model: 'gpt-3.5-turbo',      messages: [        { role: 'system', content: systemPrompt },        { role: 'user', content: userInput }      ]    });    res.status(200).json({ reply: completion.choices[0].message.content });  } catch (err) {    res.status(500).json({ error: err.message });  }});module.exports = router;